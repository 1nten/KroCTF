# CTFd 配置文件
#
# 使用这个文件来配置CTFd的行为方式。额外的属性可以被指定用于
# 插件和其他附加行为。
#
# 如果一个配置项被指定但留空，CTFd将做以下事情。
#
# 1. 寻找同名的环境变量，如果找到，就使用该值
# 2. 使用它自己的内部配置中指定的一个默认值
# 3. 使用一个空值（即无）或空字符串作为配置值

[server]
# SECRET_KEY。
# 用于创建会话和签署字符串的秘密值。这应该被设置为一个随机字符串。为了
# 为了方便起见，CTFd 会自动为你创建一个密匙文件。如果你想把这个秘钥
#到你的实例中，你应该把这个值硬编码为一个随机的静态值。
#
# 你也可以从 .gitignore 文件中删除 .ctfd_secret_key，并将此文件提交到你使用的任何版本库中。
# 你所使用的是什么。
#
# http://flask.pocoo.org/docs/latest/quickstart/#sessions
SECRET_KEY =

# DATABASE_URL
# 指定服务器的用户名、密码、主机名、端口和数据库的URI
# 用来保存CTFd数据库。
#
# 如果没有指定数据库URL，CTFd会自动创建一个SQLite数据库供你使用
# 例如：mysql+pymysql://root:<YOUR_PASSWORD_HERE>@localhost/ctfd
DATABASE_URL =

# REDIS_URL
# 连接到 Redis 服务器的 URL。如果不指定，CTFd 将使用 .data 文件夹作为文件系统缓存。
#
# 例如，redis://user:password@localhost:6379
# http://pythonhosted.org/Flask-Caching/#configuring-flask-caching
REDIS_URL =

[security]
# session_cookie_httponly
# 控制cookies是否应该设置为HttpOnly标志。默认为True。
SESSION_COOKIE_HTTPONLY = true

# session_cookie_samesite
# 控制会话cookie的SameSite属性。可以是宽松的或严格的。
# 除非很好地理解其含义，否则应保留为宽松。
SESSION_COOKIE_SAMESITE = Lax

# permanent_session_lifetime
# 一个会话的寿命。默认是604800秒（7天）。
PERMANENT_SESSION_LIFETIME = 604800

[email]
# MAILFROM_ADDR
# 如果没有在配置面板中重写，则为邮件发送的电子邮件地址。
MAILFROM_ADDR =

# MAIL_SERVER
# 如果没有在配置面板中重写，则为邮件发送的服务器。
MAIL_SERVER =

# MAIL_PORT
# 如果不在配置面板中重写，则为邮件发送的端口。
MAIL_PORT =

# MAIL_USEAUTH
# 是否使用用户名和密码对SMTP服务器进行认证
MAIL_USEAUTH =

# MAIL_USERNAME
# 如果定义了MAIL_USEAUTH，用于验证SMTP服务器的用户名
MAIL_USERNAME =

# MAIL_PASSWORD
# 如果定义了MAIL_USEAUTH，用于验证SMTP服务器的密码
MAIL_PASSWORD =

# MAIL_TLS
# 是否通过TLS连接到SMTP服务器
MAIL_TLS =

# MAIL_SSL
# 是否通过SSL连接到SMTP服务器
MAIL_SSL =

# MAILSENDER_ADDR
# 负责传输邮件的电子邮件地址。
# 这通常是 MAILFROM_ADDR 的值，但如果你的邮件
# 是由不同的域名传送的，而不是在你的 MAILFROM_ADDR 中指定的。
# 如果没有指定，就会使用 MAILFROM_ADDR 值。
# 需要设置这个值的情况相当罕见。
MAILSENDER_ADDR =

# MAILGUN_API_KEY
# Mailgun API key to send email over Mailgun. As of CTFd v3, Mailgun integration is deprecated.
# Installations using the Mailgun API should migrate over to SMTP settings.
MAILGUN_API_KEY =

# MAILGUN_BASE_URL
# Mailgun base url to send email over Mailgun. As of CTFd v3, Mailgun integration is deprecated.
# Installations using the Mailgun API should migrate over to SMTP settings.
MAILGUN_BASE_URL =

[uploads]
# UPLOAD_PROVIDER
# Specifies the service that CTFd should use to store files.
# Can be set to filesystem or s3
UPLOAD_PROVIDER =

# UPLOAD_FOLDER
# The location where files are uploaded under the filesystem uploader.
# The default destination is the CTFd/uploads folder.
UPLOAD_FOLDER =

# AWS_ACCESS_KEY_ID
# AWS access token used to authenticate to the S3 bucket. Only used under the s3 uploader.
AWS_ACCESS_KEY_ID =

# AWS_SECRET_ACCESS_KEY
# AWS secret token used to authenticate to the S3 bucket. Only used under the s3 uploader.
AWS_SECRET_ACCESS_KEY =

# AWS_S3_BUCKET
# The unique identifier for your S3 bucket. Only used under the s3 uploader.
AWS_S3_BUCKET =

# AWS_S3_ENDPOINT_URL
# A URL pointing to a custom S3 implementation. Only used under the s3 uploader.
AWS_S3_ENDPOINT_URL =

[logs]
# LOG_FOLDER
# The location where logs are written. These are the logs for CTFd key submissions, registrations, and logins. The default location is the CTFd/logs folder.
LOG_FOLDER =

[optional]
# REVERSE_PROXY
# Specifies whether CTFd is behind a reverse proxy or not. Set to true if using a reverse proxy like nginx.
# You can also specify a comma seperated set of numbers specifying the reverse proxy configuration settings.
# See https://werkzeug.palletsprojects.com/en/0.15.x/middleware/proxy_fix/#werkzeug.middleware.proxy_fix.ProxyFix.
# For example to configure `x_for=1, x_proto=1, x_host=1, x_port=1, x_prefix=1` specify `1,1,1,1,1`.
# If you specify `true` CTFd will default to the above behavior with all proxy settings set to 1.
REVERSE_PROXY =

# THEME_FALLBACK
# Specifies whether CTFd will fallback to the default "core" theme for missing pages/content. Useful for developing themes or using incomplete themes.
# Defaults to false.
THEME_FALLBACK =

# TEMPLATES_AUTO_RELOAD
# Specifies whether Flask should check for modifications to templates and reload them automatically. Defaults to true.
TEMPLATES_AUTO_RELOAD =

# SQLALCHEMY_TRACK_MODIFICATIONS
# Automatically disabled to suppress warnings and save memory.
# You should only enable this if you need it.
# Defaults to false.
SQLALCHEMY_TRACK_MODIFICATIONS =

# SWAGGER_UI
# Enable the Swagger UI endpoint at /api/v1/
SWAGGER_UI =

# UPDATE_CHECK
# Specifies whether or not CTFd will check whether or not there is a new version of CTFd. Defaults True.
UPDATE_CHECK =

# APPLICATION_ROOT
# Specifies what path CTFd is mounted under. It can be used to run CTFd in a subdirectory.
# Example: /ctfd
APPLICATION_ROOT =

# SERVER_SENT_EVENTS
# Specifies whether or not to enable the Server-Sent Events based Notifications system.
# Defaults to true
SERVER_SENT_EVENTS =

# HTML_SANITIZATION
# Specifies whether CTFd should sanitize HTML content
# Defaults to false
HTML_SANITIZATION =

# SQLALCHEMY_MAX_OVERFLOW
# Specifies the max_overflow setting for SQLAlchemy's Engine
# https://docs.sqlalchemy.org/en/13/core/engines.html#sqlalchemy.create_engine
# https://flask-sqlalchemy.palletsprojects.com/en/2.x/config/#configuration-keys
SQLALCHEMY_MAX_OVERFLOW =

# SQLALCHEMY_POOL_PRE_PING
# Specifies the pool_pre_ping setting for SQLAlchemy's Engine
# https://docs.sqlalchemy.org/en/13/core/engines.html#sqlalchemy.create_engine
# https://flask-sqlalchemy.palletsprojects.com/en/2.x/config/#configuration-keys
SQLALCHEMY_POOL_PRE_PING =

[oauth]
# OAUTH_CLIENT_ID
# Register an event at https://majorleaguecyber.org/ and use the Client ID here
OAUTH_CLIENT_ID =

# OAUTH_CLIENT_ID
# Register an event at https://majorleaguecyber.org/ and use the Client Secret here
OAUTH_CLIENT_SECRET =

[extra]
# The extra section can be used to specify additional values to be loaded into CTFd's configuration
